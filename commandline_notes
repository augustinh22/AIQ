
NOTES:

End all directories with /
Words/names that have spaces need "" (i.e. get rid of spaces!)

From the command line, you can navigate through files and folders on your computer:
  * pwd outputs the name of the current working directory.
  * ls lists all files and directories in the working directory.
  * cd switches you into the directory you specify.
  * mkdir creates a new directory in the working directory.
  * touch creates a new file inside the working directory.

Options modify the behavior of commands:
  * ls -a lists all contents of a directory, including hidden files and directories
  * ls -l lists all contents in long format
  * ls -t orders files and directories by the time they were last modified
      Multiple options can be used together, like ls -alt

From the command line, you can also copy, move, and remove files and directories:
  * cp copies files
  * mv moves and renames files
  * rm removes files
  * rm -r removes directories

Let's learn more about standard input, standard output, and standard error:
  * stdin (standard input) is information inputted into the terminal through the keyboard or input device.
  * stdout (standard output) is the information outputted after a process is run.
  * stderr (standard error) is an error message outputted by a failed process.

Redirection reroutes standard input, standard output, and standard error.
The common redirection commands are:

  * > redirects standard output of a command to a file, overwriting previous content.
  * >> redirects standard output of a command to a file, appending new content to old content.
  * < redirects standard input to a command.
  * | redirects standard output of a command to another command (pipe).
      - multiple | can be chained together
  * wc = output of lines, words and characters

A number of other commands are powerful when combined with redirection commands:
  * sort: sorts lines of text alphabetically.
  * uniq: filters duplicate, adjacent lines of text.
    - if a value is not adjacent and duplicate, both are kept
  * grep: searches for a text pattern and outputs it "global regular expression print".
    -i means case insensitive
    -R "recursive" searches all files in a directory, outputting filenames and lines
    -Rl searches all files in a directory outputting only filenames
      -l = "files with matches"
  * sed : searches for a text pattern, modifies it, and outputs it, "stream editor" (like find and replace)
    - e.g. 's/snow/rain/'
        - 's' = substitution
        - snow = search string
        - rain = replacement string

The environment refers to the preferences and settings of the current user.
The nano editor is a command line text editor used to configure the environment.
~/.bash_profile is where environment settings are stored. You can edit this file with nano.
environment variables are variables that can be used across commands and programs and hold information about the environment.
  * export VARIABLE="Value" sets and exports an environment variable.
  * USER is the name of the current user.
  * PS1 is the command prompt.
  * HOME is the home directory. It is usually not customized.
  * PATH returns a colon separated list of file paths. It is customized in advanced cases.
  * env returns a list of environment variables.



Further reading:
  http://www.gnu.org/software/bash/manual/bashref.html
  https://learncodethehardway.org/unix/bash_cheat_sheet.pdf
  https://www.codecademy.com/articles/command-line-commands

Learning Sources:
  Code Academy
  Learn Code the Hard Way


Mac OSX (= in Powershell, if different):
  pwd ::: print working directory
  hostname ::: my computer's network name
  mkdir ::: make directory
  cd ::: change directory
  ls ::: list directory
  rmdir ::: remove directory
  pushd ::: push directory
  popd ::: pop directory
  cp ::: copy a file or directory
  mv ::: move a file or directory
  less ::: page through a file (= more)
  cat ::: print the whole file (= type)
  xargs ::: execute arguments
  find ::: find files (= dir -r)
  grep ::: find things inside files (= select-string)
  man ::: read a manual page (= help)
  apropos ::: find what man page is appropriate (= helpctr)
  env ::: look at your environment
  echo ::: print some arguments
  export ::: export/set a new environment variable (= set)
  exit ::: exit the shell
  sudo ::: DANGER! become super user root DANGER! (= runas)
  ???? ::: robust copy             (= robocopy)
  ???? ::: run a command on lots of files (= forfiles )

NEVER TYPE THIS: rm -rf /
